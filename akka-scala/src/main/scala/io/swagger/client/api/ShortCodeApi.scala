/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */
package io.swagger.client.api

import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object ShortCodeApi {

  /**
   * Retrive a list of inbound Sms Short Code messages associated with your Ytel account.
   * 
   * Expected answers:
   *   code 200 : String 
   * 
   * Available security schemes:
   *   auth (basic)
   * 
   * @param page The page count to retrieve from the total results in the collection. Page indexing starts at 1.
   * @param pagesize Number of individual resources listed in the response per page
   * @param from Only list SMS messages sent from this number
   * @param shortcode Only list SMS messages sent to Shortcode
   * @param datecreated Only list SMS messages sent in the specified date MAKE REQUEST
   */
  def dedicatedshortcodeGetinboundsms(page: Option[Int], pagesize: Option[Int], from: Option[String] = None, shortcode: Option[String] = None, datecreated: Option[String] = None)(implicit basicAuth: BasicCredentials): ApiRequest[String] =
    ApiRequest[String](ApiMethods.POST, "https://api.message360.com/api/v3/", "/dedicatedshortcode/getinboundsms.json", "application/x-www-form-urlencoded")
      .withCredentials(basicAuth)
      .withFormParam("page", page)
      .withFormParam("pagesize", pagesize)
      .withFormParam("From", from)
      .withFormParam("Shortcode", shortcode)
      .withFormParam("Datecreated", datecreated)
      .withSuccessResponse[String](200)
        /**
   * Retrieve a list of Short Code assignment associated with your Ytel account.
   * 
   * Expected answers:
   *   code 200 : String 
   * 
   * Available security schemes:
   *   auth (basic)
   * 
   * @param shortcode Only list Short Code Assignment sent from this Short Code
   * @param page The page count to retrieve from the total results in the collection. Page indexing starts at 1.
   * @param pagesize The count of objects to return per page.
   */
  def dedicatedshortcodeListshortcode(shortcode: Option[String] = None, page: Option[String] = None, pagesize: Option[String] = None)(implicit basicAuth: BasicCredentials): ApiRequest[String] =
    ApiRequest[String](ApiMethods.POST, "https://api.message360.com/api/v3/", "/dedicatedshortcode/listshortcode.json", "application/x-www-form-urlencoded")
      .withCredentials(basicAuth)
      .withFormParam("Shortcode", shortcode)
      .withFormParam("page", page)
      .withFormParam("pagesize", pagesize)
      .withSuccessResponse[String](200)
        /**
   * Send Dedicated Shortcode
   * 
   * Expected answers:
   *   code 200 : String 
   * 
   * Available security schemes:
   *   auth (basic)
   * 
   * @param shortcode Your dedicated shortcode
   * @param to The number to send your SMS to
   * @param body The body of your message
   * @param method Specifies the HTTP method used to request the required URL once the Short Code message is sent.GET or POST
   * @param messagestatuscallback URL that can be requested to receive notification when Short Code message was sent.
   */
  def dedicatedshortcodeSendsms(shortcode: Int, to: Double, body: String, method: Option[String] = None, messagestatuscallback: Option[String] = None)(implicit basicAuth: BasicCredentials): ApiRequest[String] =
    ApiRequest[String](ApiMethods.POST, "https://api.message360.com/api/v3/", "/dedicatedshortcode/sendsms.json", "application/x-www-form-urlencoded")
      .withCredentials(basicAuth)
      .withFormParam("shortcode", shortcode)
      .withFormParam("to", to)
      .withFormParam("body", body)
      .withFormParam("method", method)
      .withFormParam("messagestatuscallback", messagestatuscallback)
      .withSuccessResponse[String](200)
        /**
   * Update a dedicated shortcode.
   * 
   * Expected answers:
   *   code 200 : String 
   * 
   * Available security schemes:
   *   auth (basic)
   * 
   * @param shortcode List of valid dedicated shortcode to your Ytel account.
   * @param friendlyName User generated name of the dedicated shortcode.
   * @param callbackMethod Specifies the HTTP method used to request the required StatusCallBackUrl once call connects.
   * @param callbackUrl URL that can be requested to receive notification when call has ended. A set of default parameters will be sent here once the call is finished.
   * @param fallbackMethod Specifies the HTTP method used to request the required FallbackUrl once call connects.
   * @param fallbackUrl URL used if any errors occur during execution of InboundXML or at initial request of the required Url provided with the POST.
   */
  def dedicatedshortcodeUpdateshortcode(shortcode: String, friendlyName: Option[String] = None, callbackMethod: Option[String] = None, callbackUrl: Option[String] = None, fallbackMethod: Option[String] = None, fallbackUrl: Option[String] = None)(implicit basicAuth: BasicCredentials): ApiRequest[String] =
    ApiRequest[String](ApiMethods.POST, "https://api.message360.com/api/v3/", "/dedicatedshortcode/updateshortcode.json", "application/x-www-form-urlencoded")
      .withCredentials(basicAuth)
      .withFormParam("Shortcode", shortcode)
      .withFormParam("FriendlyName", friendlyName)
      .withFormParam("CallbackMethod", callbackMethod)
      .withFormParam("CallbackUrl", callbackUrl)
      .withFormParam("FallbackMethod", fallbackMethod)
      .withFormParam("FallbackUrl", fallbackUrl)
      .withSuccessResponse[String](200)
        /**
   * Retrieve a single Short Code object by its shortcode assignment.
   * 
   * Expected answers:
   *   code 200 : String 
   * 
   * Available security schemes:
   *   auth (basic)
   * 
   * @param shortcode List of valid Dedicated Short Code to your Ytel account
   */
  def dedicatedshortcodeViewshortcode(shortcode: String)(implicit basicAuth: BasicCredentials): ApiRequest[String] =
    ApiRequest[String](ApiMethods.POST, "https://api.message360.com/api/v3/", "/dedicatedshortcode/viewshortcode.json", "application/x-www-form-urlencoded")
      .withCredentials(basicAuth)
      .withFormParam("Shortcode", shortcode)
      .withSuccessResponse[String](200)
        /**
   * Retrieve a list of Short Code messages.
   * 
   * Expected answers:
   *   code 200 : String 
   * 
   * Available security schemes:
   *   auth (basic)
   * 
   * @param shortcode Only list messages sent from this Short Code
   * @param to Only list messages sent to this number
   * @param dateSent Only list messages sent with the specified date
   * @param page The page count to retrieve from the total results in the collection. Page indexing starts at 1.
   * @param pageSize The count of objects to return per page.
   */
  def shortcodeListsms(shortcode: Option[String] = None, to: Option[String] = None, dateSent: Option[String] = None, page: Option[Int], pageSize: Option[Int])(implicit basicAuth: BasicCredentials): ApiRequest[String] =
    ApiRequest[String](ApiMethods.POST, "https://api.message360.com/api/v3/", "/shortcode/listsms.json", "application/x-www-form-urlencoded")
      .withCredentials(basicAuth)
      .withFormParam("Shortcode", shortcode)
      .withFormParam("To", to)
      .withFormParam("DateSent", dateSent)
      .withFormParam("Page", page)
      .withFormParam("PageSize", pageSize)
      .withSuccessResponse[String](200)
        /**
   * View a single Sms Short Code message.
   * 
   * Expected answers:
   *   code 200 : String 
   * 
   * Available security schemes:
   *   auth (basic)
   * 
   * @param messageSid The unique identifier for the sms resource
   */
  def shortcodeViewsms(messageSid: String)(implicit basicAuth: BasicCredentials): ApiRequest[String] =
    ApiRequest[String](ApiMethods.POST, "https://api.message360.com/api/v3/", "/shortcode/viewsms.json", "application/x-www-form-urlencoded")
      .withCredentials(basicAuth)
      .withFormParam("MessageSid", messageSid)
      .withSuccessResponse[String](200)
      

}

