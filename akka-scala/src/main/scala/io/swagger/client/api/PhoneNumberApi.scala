/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */
package io.swagger.client.api

import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object PhoneNumberApi {

  /**
   * Retrieve a list of available phone numbers that can be purchased and used for your Ytel account.
   * 
   * Expected answers:
   *   code 200 : String 
   * 
   * Available security schemes:
   *   auth (basic)
   * 
   * @param numbertype Number type either SMS,Voice or all
   * @param areacode Specifies the area code for the returned list of available numbers. Only available for North American numbers.
   * @param pagesize The count of objects to return.
   */
  def incomingphoneAvailablenumber(numbertype: String, areacode: String, pagesize: Option[Int])(implicit basicAuth: BasicCredentials): ApiRequest[String] =
    ApiRequest[String](ApiMethods.POST, "https://api.message360.com/api/v3/", "/incomingphone/availablenumber.json", "application/x-www-form-urlencoded")
      .withCredentials(basicAuth)
      .withFormParam("numbertype", numbertype)
      .withFormParam("areacode", areacode)
      .withFormParam("pagesize", pagesize)
      .withSuccessResponse[String](200)
        /**
   * Purchase a selected number of DID&#39;s from specific area codes to be used with your Ytel account.
   * 
   * Expected answers:
   *   code 200 : String 
   * 
   * Available security schemes:
   *   auth (basic)
   * 
   * @param numberType The capability the number supports.
   * @param areaCode Specifies the area code for the returned list of available numbers. Only available for North American numbers.
   * @param quantity A positive integer that tells how many number you want to buy at a time.
   * @param leftover If desired quantity is unavailable purchase what is available .
   */
  def incomingphoneBulkbuy(numberType: String, areaCode: String, quantity: String, leftover: Option[String] = None)(implicit basicAuth: BasicCredentials): ApiRequest[String] =
    ApiRequest[String](ApiMethods.POST, "https://api.message360.com/api/v3/", "/incomingphone/bulkbuy.json", "application/x-www-form-urlencoded")
      .withCredentials(basicAuth)
      .withFormParam("NumberType", numberType)
      .withFormParam("AreaCode", areaCode)
      .withFormParam("Quantity", quantity)
      .withFormParam("Leftover", leftover)
      .withSuccessResponse[String](200)
        /**
   * Purchase a phone number to be used with your Ytel account
   * 
   * Expected answers:
   *   code 200 : String 
   * 
   * Available security schemes:
   *   auth (basic)
   * 
   * @param phoneNumber A valid 10-digit Ytel number (E.164 format).
   */
  def incomingphoneBuynumber(phoneNumber: String)(implicit basicAuth: BasicCredentials): ApiRequest[String] =
    ApiRequest[String](ApiMethods.POST, "https://api.message360.com/api/v3/", "/incomingphone/buynumber.json", "application/x-www-form-urlencoded")
      .withCredentials(basicAuth)
      .withFormParam("PhoneNumber", phoneNumber)
      .withSuccessResponse[String](200)
        /**
   * Get DID Score Number
   * 
   * Expected answers:
   *   code 200 : String 
   * 
   * Available security schemes:
   *   auth (basic)
   * 
   * @param phonenumber Specifies the multiple phone numbers for check updated spamscore .
   */
  def incomingphoneGetdidscore(phonenumber: String)(implicit basicAuth: BasicCredentials): ApiRequest[String] =
    ApiRequest[String](ApiMethods.POST, "https://api.message360.com/api/v3/", "/incomingphone/getdidscore.json", "application/x-www-form-urlencoded")
      .withCredentials(basicAuth)
      .withFormParam("Phonenumber", phonenumber)
      .withSuccessResponse[String](200)
        /**
   * Retrieve a list of purchased phones numbers associated with your Ytel account.
   * 
   * Expected answers:
   *   code 200 : String 
   * 
   * Available security schemes:
   *   auth (basic)
   * 
   * @param page Which page of the overall response will be returned. Page indexing starts at 1.
   * @param pageSize The page count to retrieve from the total results in the collection. Page indexing starts at 1.
   * @param numberType The capability supported by the number.Number type either SMS,Voice or all
   * @param friendlyName A human-readable label added to the number object.
   */
  def incomingphoneListnumber(page: Option[Int], pageSize: Option[Int], numberType: Option[String] = None, friendlyName: Option[String] = None)(implicit basicAuth: BasicCredentials): ApiRequest[String] =
    ApiRequest[String](ApiMethods.POST, "https://api.message360.com/api/v3/", "/incomingphone/listnumber.json", "application/x-www-form-urlencoded")
      .withCredentials(basicAuth)
      .withFormParam("Page", page)
      .withFormParam("PageSize", pageSize)
      .withFormParam("NumberType", numberType)
      .withFormParam("FriendlyName", friendlyName)
      .withSuccessResponse[String](200)
        /**
   * Remove a purchased Ytel number from your account.
   * 
   * Expected answers:
   *   code 200 : String 
   * 
   * Available security schemes:
   *   auth (basic)
   * 
   * @param phoneNumber A valid Ytel comma separated numbers (E.164 format).
   */
  def incomingphoneMassreleasenumber(phoneNumber: String)(implicit basicAuth: BasicCredentials): ApiRequest[String] =
    ApiRequest[String](ApiMethods.POST, "https://api.message360.com/api/v3/", "/incomingphone/massreleasenumber.json", "application/x-www-form-urlencoded")
      .withCredentials(basicAuth)
      .withFormParam("PhoneNumber", phoneNumber)
      .withSuccessResponse[String](200)
        /**
   * Update properties for a Ytel numbers that has been purchased for your account. Refer to the parameters list for the list of properties that can be updated.
   * 
   * Expected answers:
   *   code 200 : String 
   * 
   * Available security schemes:
   *   auth (basic)
   * 
   * @param phoneNumber A valid comma(,) separated Ytel numbers. (E.164 format).
   * @param voiceUrl The URL returning InboundXML incoming calls should execute when connected.
   * @param friendlyName A human-readable value for labeling the number.
   * @param voiceMethod Specifies the HTTP method used to request the VoiceUrl once incoming call connects.
   * @param voiceFallbackUrl URL used if any errors occur during execution of InboundXML on a call or at initial request of the voice url
   * @param voiceFallbackMethod Specifies the HTTP method used to request the VoiceFallbackUrl once incoming call connects.
   * @param hangupCallback URL that can be requested to receive notification when and how incoming call has ended.
   * @param hangupCallbackMethod The HTTP method Ytel will use when requesting the HangupCallback URL.
   * @param heartbeatUrl URL that can be used to monitor the phone number.
   * @param heartbeatMethod The HTTP method Ytel will use when requesting the HeartbeatUrl.
   * @param smsUrl URL requested when an SMS is received.
   * @param smsMethod The HTTP method Ytel will use when requesting the SmsUrl.
   * @param smsFallbackUrl URL used if any errors occur during execution of InboundXML from an SMS or at initial request of the SmsUrl.
   * @param smsFallbackMethod The HTTP method Ytel will use when URL requested if the SmsUrl is not available.
   */
  def incomingphoneMassupdatenumber(phoneNumber: String, voiceUrl: String, friendlyName: Option[String] = None, voiceMethod: Option[String] = None, voiceFallbackUrl: Option[String] = None, voiceFallbackMethod: Option[String] = None, hangupCallback: Option[String] = None, hangupCallbackMethod: Option[String] = None, heartbeatUrl: Option[String] = None, heartbeatMethod: Option[String] = None, smsUrl: Option[String] = None, smsMethod: Option[String] = None, smsFallbackUrl: Option[String] = None, smsFallbackMethod: Option[String] = None)(implicit basicAuth: BasicCredentials): ApiRequest[String] =
    ApiRequest[String](ApiMethods.POST, "https://api.message360.com/api/v3/", "/incomingphone/massupdatenumber.json", "application/x-www-form-urlencoded")
      .withCredentials(basicAuth)
      .withFormParam("PhoneNumber", phoneNumber)
      .withFormParam("VoiceUrl", voiceUrl)
      .withFormParam("FriendlyName", friendlyName)
      .withFormParam("VoiceMethod", voiceMethod)
      .withFormParam("VoiceFallbackUrl", voiceFallbackUrl)
      .withFormParam("VoiceFallbackMethod", voiceFallbackMethod)
      .withFormParam("HangupCallback", hangupCallback)
      .withFormParam("HangupCallbackMethod", hangupCallbackMethod)
      .withFormParam("HeartbeatUrl", heartbeatUrl)
      .withFormParam("HeartbeatMethod", heartbeatMethod)
      .withFormParam("SmsUrl", smsUrl)
      .withFormParam("SmsMethod", smsMethod)
      .withFormParam("SmsFallbackUrl", smsFallbackUrl)
      .withFormParam("SmsFallbackMethod", smsFallbackMethod)
      .withSuccessResponse[String](200)
        /**
   * Remove a purchased Ytel number from your account.
   * 
   * Expected answers:
   *   code 200 : String 
   * 
   * Available security schemes:
   *   auth (basic)
   * 
   * @param phoneNumber A valid 10-digit Ytel number (E.164 format).
   * @param responseType Response type format xml or json
   */
  def incomingphoneReleasenumberByResponseTypePost(phoneNumber: String, responseType: String)(implicit basicAuth: BasicCredentials): ApiRequest[String] =
    ApiRequest[String](ApiMethods.POST, "https://api.message360.com/api/v3/", "/incomingphone/releasenumber.{ResponseType}", "application/x-www-form-urlencoded")
      .withCredentials(basicAuth)
      .withFormParam("PhoneNumber", phoneNumber)
      .withPathParam("ResponseType", responseType)
      .withSuccessResponse[String](200)
        /**
   * Transfer phone number that has been purchased for from one account to another account.
   * 
   * Expected answers:
   *   code 200 : String 
   * 
   * Available security schemes:
   *   auth (basic)
   * 
   * @param phonenumber A valid 10-digit Ytel number (E.164 format).
   * @param fromaccountsid A specific Accountsid from where Number is getting transfer.
   * @param toaccountsid A specific Accountsid to which Number is getting transfer.
   */
  def incomingphoneTransferphonenumbers(phonenumber: String, fromaccountsid: String, toaccountsid: String)(implicit basicAuth: BasicCredentials): ApiRequest[String] =
    ApiRequest[String](ApiMethods.POST, "https://api.message360.com/api/v3/", "/incomingphone/transferphonenumbers.json", "application/x-www-form-urlencoded")
      .withCredentials(basicAuth)
      .withFormParam("phonenumber", phonenumber)
      .withFormParam("fromaccountsid", fromaccountsid)
      .withFormParam("toaccountsid", toaccountsid)
      .withSuccessResponse[String](200)
        /**
   * Update properties for a Ytel number that has been purchased for your account. Refer to the parameters list for the list of properties that can be updated.
   * 
   * Expected answers:
   *   code 200 : String 
   * 
   * Available security schemes:
   *   auth (basic)
   * 
   * @param phoneNumber A valid Ytel number (E.164 format).
   * @param voiceUrl URL requested once the call connects
   * @param friendlyName Phone number friendly name description
   * @param voiceMethod Post or Get
   * @param voiceFallbackUrl URL requested if the voice URL is not available
   * @param voiceFallbackMethod Post or Get
   * @param hangupCallback callback url after a hangup occurs
   * @param hangupCallbackMethod Post or Get
   * @param heartbeatUrl URL requested once the call connects
   * @param heartbeatMethod URL that can be requested every 60 seconds during the call to notify of elapsed time
   * @param smsUrl URL requested when an SMS is received
   * @param smsMethod Post or Get
   * @param smsFallbackUrl URL used if any errors occur during execution of InboundXML from an SMS or at initial request of the SmsUrl.
   * @param smsFallbackMethod The HTTP method Ytel will use when URL requested if the SmsUrl is not available.
   */
  def incomingphoneUpdatenumber(phoneNumber: String, voiceUrl: String, friendlyName: Option[String] = None, voiceMethod: Option[String] = None, voiceFallbackUrl: Option[String] = None, voiceFallbackMethod: Option[String] = None, hangupCallback: Option[String] = None, hangupCallbackMethod: Option[String] = None, heartbeatUrl: Option[String] = None, heartbeatMethod: Option[String] = None, smsUrl: Option[String] = None, smsMethod: Option[String] = None, smsFallbackUrl: Option[String] = None, smsFallbackMethod: Option[String] = None)(implicit basicAuth: BasicCredentials): ApiRequest[String] =
    ApiRequest[String](ApiMethods.POST, "https://api.message360.com/api/v3/", "/incomingphone/updatenumber.json", "application/x-www-form-urlencoded")
      .withCredentials(basicAuth)
      .withFormParam("PhoneNumber", phoneNumber)
      .withFormParam("VoiceUrl", voiceUrl)
      .withFormParam("FriendlyName", friendlyName)
      .withFormParam("VoiceMethod", voiceMethod)
      .withFormParam("VoiceFallbackUrl", voiceFallbackUrl)
      .withFormParam("VoiceFallbackMethod", voiceFallbackMethod)
      .withFormParam("HangupCallback", hangupCallback)
      .withFormParam("HangupCallbackMethod", hangupCallbackMethod)
      .withFormParam("HeartbeatUrl", heartbeatUrl)
      .withFormParam("HeartbeatMethod", heartbeatMethod)
      .withFormParam("SmsUrl", smsUrl)
      .withFormParam("SmsMethod", smsMethod)
      .withFormParam("SmsFallbackUrl", smsFallbackUrl)
      .withFormParam("SmsFallbackMethod", smsFallbackMethod)
      .withSuccessResponse[String](200)
        /**
   * Retrieve the details for a phone number by its number.
   * 
   * Expected answers:
   *   code 200 : String 
   * 
   * Available security schemes:
   *   auth (basic)
   * 
   * @param phoneNumber A valid Ytel 10-digit phone number (E.164 format).
   */
  def incomingphoneViewnumber(phoneNumber: String)(implicit basicAuth: BasicCredentials): ApiRequest[String] =
    ApiRequest[String](ApiMethods.POST, "https://api.message360.com/api/v3/", "/incomingphone/viewnumber.json", "application/x-www-form-urlencoded")
      .withCredentials(basicAuth)
      .withFormParam("PhoneNumber", phoneNumber)
      .withSuccessResponse[String](200)
      

}

