/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */
package io.swagger.client.api

import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object ConferenceApi {

  /**
   * Add Participant in conference 
   * 
   * Expected answers:
   *   code 200 : String 
   * 
   * Available security schemes:
   *   auth (basic)
   * 
   * @param conferenceSid The unique identifier for a conference object.
   * @param participantNumber The phone number of the participant to be added.
   * @param muted Specifies if participant should be muted.
   * @param deaf Specifies if the participant should hear audio in the conference.
   */
  def conferencesAddParticipant(conferenceSid: String, participantNumber: String, muted: Option[Boolean] = None, deaf: Option[Boolean] = None)(implicit basicAuth: BasicCredentials): ApiRequest[String] =
    ApiRequest[String](ApiMethods.POST, "https://api.ytel.com/api/v3", "/conferences/addParticipant.json", "application/x-www-form-urlencoded")
      .withCredentials(basicAuth)
      .withFormParam("ConferenceSid", conferenceSid)
      .withFormParam("ParticipantNumber", participantNumber)
      .withFormParam("Muted", muted)
      .withFormParam("Deaf", deaf)
      .withSuccessResponse[String](200)
        /**
   * Here you can experiment with initiating a conference call through Ytel and view the request response generated when doing so.
   * 
   * Expected answers:
   *   code 200 : String 
   * 
   * Available security schemes:
   *   auth (basic)
   * 
   * @param from A valid 10-digit number (E.164 format) that will be initiating the conference call.
   * @param to A valid 10-digit number (E.164 format) that is to receive the conference call.
   * @param url URL requested once the conference connects
   * @param method Specifies the HTTP method used to request the required URL once call connects.
   * @param statusCallBackUrl URL that can be requested to receive notification when call has ended. A set of default parameters will be sent here once the conference is finished.
   * @param statusCallBackMethod Specifies the HTTP methodlinkclass used to request StatusCallbackUrl.
   * @param fallbackUrl URL requested if the initial Url parameter fails or encounters an error
   * @param fallbackMethod Specifies the HTTP method used to request the required FallbackUrl once call connects.
   * @param record Specifies if the conference should be recorded.
   * @param recordCallBackUrl Recording parameters will be sent here upon completion.
   * @param recordCallBackMethod Specifies the HTTP method used to request the required URL once conference connects.
   * @param scheduleTime Schedule conference in future. Schedule time must be greater than current time
   * @param timeout The number of seconds the call stays on the line while waiting for an answer. The max time limit is 999 and the default limit is 60 seconds but lower times can be set.
   */
  def conferencesCreateConference(from: String, to: String, url: String, method: Option[String], statusCallBackUrl: Option[String] = None, statusCallBackMethod: Option[String] = None, fallbackUrl: Option[String] = None, fallbackMethod: Option[String] = None, record: Option[Boolean] = None, recordCallBackUrl: Option[String] = None, recordCallBackMethod: Option[String] = None, scheduleTime: Option[String] = None, timeout: Option[Int] = None)(implicit basicAuth: BasicCredentials): ApiRequest[String] =
    ApiRequest[String](ApiMethods.POST, "https://api.ytel.com/api/v3", "/conferences/createConference.json", "application/x-www-form-urlencoded")
      .withCredentials(basicAuth)
      .withFormParam("From", from)
      .withFormParam("To", to)
      .withFormParam("Method", method)
      .withFormParam("StatusCallBackUrl", statusCallBackUrl)
      .withFormParam("StatusCallBackMethod", statusCallBackMethod)
      .withFormParam("FallbackUrl", fallbackUrl)
      .withFormParam("FallbackMethod", fallbackMethod)
      .withFormParam("Record", record)
      .withFormParam("RecordCallBackUrl", recordCallBackUrl)
      .withFormParam("RecordCallBackMethod", recordCallBackMethod)
      .withFormParam("ScheduleTime", scheduleTime)
      .withFormParam("Timeout", timeout)
      .withQueryParam("Url", url)
      .withSuccessResponse[String](200)
        /**
   * Deaf Mute Participant
   * 
   * Expected answers:
   *   code 200 : String 
   * 
   * Available security schemes:
   *   auth (basic)
   * 
   * @param conferenceSid ID of the active conference
   * @param participantSid ID of an active participant
   * @param muted Mute a participant
   * @param deaf Make it so a participant cant hear
   */
  def conferencesDeafMuteParticipant(conferenceSid: String, participantSid: String, muted: Option[Boolean] = None, deaf: Option[Boolean] = None)(implicit basicAuth: BasicCredentials): ApiRequest[String] =
    ApiRequest[String](ApiMethods.POST, "https://api.ytel.com/api/v3", "/conferences/deafMuteParticipant.json", "application/x-www-form-urlencoded")
      .withCredentials(basicAuth)
      .withFormParam("conferenceSid", conferenceSid)
      .withFormParam("ParticipantSid", participantSid)
      .withFormParam("Muted", muted)
      .withFormParam("Deaf", deaf)
      .withSuccessResponse[String](200)
        /**
   * Remove a participant from a conference.
   * 
   * Expected answers:
   *   code 200 : String 
   * 
   * Available security schemes:
   *   auth (basic)
   * 
   * @param conferenceSid The unique identifier for a conference object.
   * @param participantSid The unique identifier for a participant object.
   */
  def conferencesHangupParticipant(conferenceSid: String, participantSid: String)(implicit basicAuth: BasicCredentials): ApiRequest[String] =
    ApiRequest[String](ApiMethods.POST, "https://api.ytel.com/api/v3", "/conferences/hangupParticipant.json", "application/x-www-form-urlencoded")
      .withCredentials(basicAuth)
      .withFormParam("ConferenceSid", conferenceSid)
      .withQueryParam("ParticipantSid", participantSid)
      .withSuccessResponse[String](200)
        /**
   * Retrieve a list of participants for an in-progress conference.
   * 
   * Expected answers:
   *   code 200 : String 
   * 
   * Available security schemes:
   *   auth (basic)
   * 
   * @param conferenceSid The unique identifier for a conference.
   * @param page The page count to retrieve from the total results in the collection. Page indexing starts at 1.
   * @param pagesize The count of objects to return per page.
   * @param muted Specifies if participant should be muted.
   * @param deaf Specifies if the participant should hear audio in the conference.
   */
  def conferencesListParticipant(conferenceSid: String, page: Option[Int], pagesize: Option[Int], muted: Option[Boolean] = None, deaf: Option[Boolean] = None)(implicit basicAuth: BasicCredentials): ApiRequest[String] =
    ApiRequest[String](ApiMethods.POST, "https://api.ytel.com/api/v3", "/conferences/listParticipant.json", "application/x-www-form-urlencoded")
      .withCredentials(basicAuth)
      .withFormParam("ConferenceSid", conferenceSid)
      .withFormParam("Page", page)
      .withFormParam("Pagesize", pagesize)
      .withFormParam("Muted", muted)
      .withFormParam("Deaf", deaf)
      .withSuccessResponse[String](200)
        /**
   * Retrieve a list of conference objects.
   * 
   * Expected answers:
   *   code 200 : String 
   * 
   * Available security schemes:
   *   auth (basic)
   * 
   * @param page The page count to retrieve from the total results in the collection. Page indexing starts at 1.
   * @param pagesize Number of individual resources listed in the response per page
   * @param friendlyName Only return conferences with the specified FriendlyName
   * @param dateCreated Conference created date
   */
  def conferencesListconference(page: Option[Int], pagesize: Option[Int], friendlyName: Option[String] = None, dateCreated: Option[String] = None)(implicit basicAuth: BasicCredentials): ApiRequest[String] =
    ApiRequest[String](ApiMethods.POST, "https://api.ytel.com/api/v3", "/conferences/listconference.json", "application/x-www-form-urlencoded")
      .withCredentials(basicAuth)
      .withFormParam("page", page)
      .withFormParam("pagesize", pagesize)
      .withFormParam("FriendlyName", friendlyName)
      .withFormParam("DateCreated", dateCreated)
      .withSuccessResponse[String](200)
        /**
   * Play an audio file during a conference.
   * 
   * Expected answers:
   *   code 200 : String 
   * 
   * Available security schemes:
   *   auth (basic)
   * 
   * @param conferenceSid The unique identifier for a conference object.
   * @param participantSid The unique identifier for a participant object.
   * @param audioUrl The URL for the audio file that is to be played during the conference. Multiple audio files can be chained by using a semicolon.
   */
  def conferencesPlayAudio(conferenceSid: String, participantSid: String, audioUrl: String)(implicit basicAuth: BasicCredentials): ApiRequest[String] =
    ApiRequest[String](ApiMethods.POST, "https://api.ytel.com/api/v3", "/conferences/playAudio.json", "application/x-www-form-urlencoded")
      .withCredentials(basicAuth)
      .withFormParam("ConferenceSid", conferenceSid)
      .withFormParam("ParticipantSid", participantSid)
      .withFormParam("AudioUrl", audioUrl)
      .withSuccessResponse[String](200)
        /**
   * Retrieve information about a participant by its ParticipantSid.
   * 
   * Expected answers:
   *   code 200 : String 
   * 
   * Available security schemes:
   *   auth (basic)
   * 
   * @param conferenceSid The unique identifier for a conference object.
   * @param participantSid The unique identifier for a participant object.
   */
  def conferencesViewParticipant(conferenceSid: String, participantSid: String)(implicit basicAuth: BasicCredentials): ApiRequest[String] =
    ApiRequest[String](ApiMethods.POST, "https://api.ytel.com/api/v3", "/conferences/viewParticipant.json", "application/x-www-form-urlencoded")
      .withCredentials(basicAuth)
      .withFormParam("ConferenceSid", conferenceSid)
      .withFormParam("ParticipantSid", participantSid)
      .withSuccessResponse[String](200)
        /**
   * Retrieve information about a conference by its ConferenceSid.
   * 
   * Expected answers:
   *   code 200 : String 
   * 
   * Available security schemes:
   *   auth (basic)
   * 
   * @param conferenceSid The unique identifier of each conference resource
   */
  def conferencesViewconference(conferenceSid: String)(implicit basicAuth: BasicCredentials): ApiRequest[String] =
    ApiRequest[String](ApiMethods.POST, "https://api.ytel.com/api/v3", "/conferences/viewconference.json", "application/x-www-form-urlencoded")
      .withCredentials(basicAuth)
      .withFormParam("ConferenceSid", conferenceSid)
      .withSuccessResponse[String](200)
      

}

