#import <Foundation/Foundation.h>
#import "SWGApi.h"

/**
* Ytel API V3
* Ytel API version 3
*
* OpenAPI spec version: 3.0
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/


@interface SWGTranscriptionApi: NSObject <SWGApi>

extern NSString* kSWGTranscriptionApiErrorDomain;
extern NSInteger kSWGTranscriptionApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(SWGApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Transcribe Audio URL
/// Transcribe an audio recording from a file.
///
/// @param audiourl URL pointing to the location of the audio file that is to be transcribed.
/// 
///  code:200 message:""
///
/// @return NSString*
-(NSURLSessionTask*) transcriptionsAudiourltranscriptionWithAudiourl: (NSString*) audiourl
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;


/// List Transcriptions
/// Retrieve a list of transcription objects for your Ytel account.
///
/// @param page The page count to retrieve from the total results in the collection. Page indexing starts at 1. (optional) (default to 1)
/// @param pagesize The count of objects to return per page. (optional) (default to 10)
/// @param status The state of the transcription. (optional)
/// @param dateTranscribed The date the transcription took place. (optional)
/// 
///  code:200 message:""
///
/// @return NSString*
-(NSURLSessionTask*) transcriptionsListtranscriptionWithPage: (NSNumber*) page
    pagesize: (NSNumber*) pagesize
    status: (NSString*) status
    dateTranscribed: (NSString*) dateTranscribed
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;


/// Transcribe Recording
/// Transcribe a recording by its RecordingSid.
///
/// @param recordingSid The unique identifier for a recording object.
/// 
///  code:200 message:""
///
/// @return NSString*
-(NSURLSessionTask*) transcriptionsRecordingtranscriptionWithRecordingSid: (NSString*) recordingSid
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;


/// View Transcription
/// Retrieve information about a transaction by its TranscriptionSid.
///
/// @param transcriptionsid The unique identifier for a transcription object.
/// 
///  code:200 message:""
///
/// @return NSString*
-(NSURLSessionTask*) transcriptionsViewtranscriptionWithTranscriptionsid: (NSString*) transcriptionsid
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;



@end
