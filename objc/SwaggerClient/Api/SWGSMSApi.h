#import <Foundation/Foundation.h>
#import "SWGApi.h"

/**
* Ytel API V3
* Ytel API version 3
*
* OpenAPI spec version: 3.0
* 
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/


@interface SWGSMSApi: NSObject <SWGApi>

extern NSString* kSWGSMSApiErrorDomain;
extern NSInteger kSWGSMSApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(SWGApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// List Inbound SMS
/// Retrieve a list of Inbound SMS message objects.
///
/// @param page The page count to retrieve from the total results in the collection. Page indexing starts at 1. (optional) (default to 1)
/// @param pageSize The count of objects to return per page. (optional) (default to 10)
/// @param from Filter SMS message objects from this valid 10-digit phone number (E.164 format). (optional)
/// @param to Filter SMS message objects to this valid 10-digit phone number (E.164 format). (optional)
/// @param dateSent Filter sms message objects by this date. (optional)
/// 
///  code:200 message:""
///
/// @return NSString*
-(NSURLSessionTask*) smsGetinboundsmsWithPage: (NSNumber*) page
    pageSize: (NSNumber*) pageSize
    from: (NSString*) from
    to: (NSString*) to
    dateSent: (NSString*) dateSent
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;


/// List SMS
/// Retrieve a list of Outbound SMS message objects.
///
/// @param page The page count to retrieve from the total results in the collection. Page indexing starts at 1. (optional) (default to 1)
/// @param pageSize Number of individual resources listed in the response per page (optional) (default to 10)
/// @param from Filter SMS message objects from this valid 10-digit phone number (E.164 format). (optional)
/// @param to Filter SMS message objects to this valid 10-digit phone number (E.164 format). (optional)
/// @param dateSent Only list SMS messages sent in the specified date range (optional)
/// 
///  code:200 message:""
///
/// @return NSString*
-(NSURLSessionTask*) smsListsmsWithPage: (NSNumber*) page
    pageSize: (NSNumber*) pageSize
    from: (NSString*) from
    to: (NSString*) to
    dateSent: (NSString*) dateSent
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;


/// Send SMS
/// Send an SMS from a Ytel number
///
/// @param from The 10-digit SMS-enabled Ytel number (E.164 format) in which the message is sent.
/// @param to The 10-digit phone number (E.164 format) that will receive the message.
/// @param body The body message that is to be sent in the text.
/// @param method Specifies the HTTP method used to request the required URL once SMS sent. (optional)
/// @param messageStatusCallback URL that can be requested to receive notification when SMS has Sent. A set of default parameters will be sent here once the SMS is finished. (optional)
/// @param smartsms Check&#39;s &#39;to&#39; number can receive sms or not using Carrier API, if wireless &#x3D; true then text sms is sent, else wireless &#x3D; false then call is recieved to end user with audible message. (optional) (default to false)
/// @param deliveryStatus Delivery reports are a method to tell your system if the message has arrived on the destination phone. (optional) (default to false)
/// 
///  code:200 message:""
///
/// @return NSString*
-(NSURLSessionTask*) smsSendsmsWithFrom: (NSString*) from
    to: (NSString*) to
    body: (NSString*) body
    method: (NSString*) method
    messageStatusCallback: (NSString*) messageStatusCallback
    smartsms: (NSNumber*) smartsms
    deliveryStatus: (NSNumber*) deliveryStatus
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;


/// View SMS
/// Retrieve a single SMS message object with details by its SmsSid.
///
/// @param messageSid The unique identifier for a sms message.
/// 
///  code:200 message:""
///
/// @return NSString*
-(NSURLSessionTask*) smsViewdetailsmsWithMessageSid: (NSString*) messageSid
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;


/// View SMS
/// Retrieve a single SMS message object by its SmsSid.
///
/// @param messageSid The unique identifier for a sms message.
/// 
///  code:200 message:""
///
/// @return NSString*
-(NSURLSessionTask*) smsViewsmsWithMessageSid: (NSString*) messageSid
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;



@end
