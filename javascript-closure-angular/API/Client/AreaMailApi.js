/**
 * @fileoverview AUTOMATICALLY GENERATED service for API.Client.AreaMailApi.
 * Do not edit this file by hand or your changes will be lost next time it is
 * generated.
 *
 * Ytel API version 3
 * Version: 3.0
 * Generated by: io.swagger.codegen.languages.JavascriptClosureAngularClientCodegen
 */
goog.provide('API.Client.AreaMailApi');


/**
 * @constructor
 * @param {!angular.$http} $http
 * @param {!Object} $httpParamSerializer
 * @param {!angular.$injector} $injector
 * @struct
 */
API.Client.AreaMailApi = function($http, $httpParamSerializer, $injector) {
  /** @private {!string} */
  this.basePath_ = $injector.has('AreaMailApiBasePath') ?
                   /** @type {!string} */ ($injector.get('AreaMailApiBasePath')) :
                   'https://api.message360.com/api/v3/';

  /** @private {!Object<string, string>} */
  this.defaultHeaders_ = $injector.has('AreaMailApiDefaultHeaders') ?
                   /** @type {!Object<string, string>} */ (
                       $injector.get('AreaMailApiDefaultHeaders')) :
                   {};

  /** @private {!angular.$http} */
  this.http_ = $http;

  /** @package {!Object} */
  this.httpParamSerializer = $injector.get('$httpParamSerializer');
}
API.Client.AreaMailApi.$inject = ['$http', '$httpParamSerializer', '$injector'];

/**
 * Create AreaMail
 * Create a new AreaMail object.
 * @param {!string} routes List of routes that AreaMail should be delivered to.  A single route can be either a zipcode or a carrier route.List of routes that AreaMail should be delivered to.  A single route can be either a zipcode or a carrier route. A carrier route is in the form of 92610-C043 where the carrier route is composed of 5 numbers for zipcode, 1 letter for carrier route type, and 3 numbers for carrier route code. Delivery can be sent to mutliple routes by separating them with a commas. Valid Values: 92656, 92610-C043
 * @param {!string} attachbyid Set an existing areamail by attaching its AreamailId.
 * @param {!string} front The front of the AreaMail item to be created. This can be a URL, local file, or an HTML string. Supported file types are PDF, PNG, and JPEG. Back required
 * @param {!string} back The back of the AreaMail item to be created. This can be a URL, local file, or an HTML string. Supported file types are PDF, PNG, and JPEG.
 * @param {!string=} opt_description A string value to use as a description for this AreaMail item.
 * @param {!string=} opt_targettype The delivery location type.
 * @param {!string=} opt_htmldata A string value that contains HTML markup.
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!string>}
 */
API.Client.AreaMailApi.prototype.areamailCreate = function(routes, attachbyid, front, back, opt_description, opt_targettype, opt_htmldata, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/areamail/create.json';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  /** @type {!Object} */
  var formParams = {};

  // verify required parameter 'routes' is set
  if (!routes) {
    throw new Error('Missing required parameter routes when calling areamailCreate');
  }
  // verify required parameter 'attachbyid' is set
  if (!attachbyid) {
    throw new Error('Missing required parameter attachbyid when calling areamailCreate');
  }
  // verify required parameter 'front' is set
  if (!front) {
    throw new Error('Missing required parameter front when calling areamailCreate');
  }
  // verify required parameter 'back' is set
  if (!back) {
    throw new Error('Missing required parameter back when calling areamailCreate');
  }
  headerParams['Content-Type'] = 'application/x-www-form-urlencoded';

  formParams['routes'] = routes;

  formParams['attachbyid'] = attachbyid;

  formParams['front'] = front;

  formParams['back'] = back;

  formParams['description'] = opt_description;

  formParams['targettype'] = opt_targettype;

  formParams['htmldata'] = opt_htmldata;

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: false,
        data: this.httpParamSerializer(formParams),
    params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * Delete AreaMail
 * Remove an AreaMail object by its AreaMailId.
 * @param {!string} areamailid The unique identifier for an AreaMail object.
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!string>}
 */
API.Client.AreaMailApi.prototype.areamailDelete = function(areamailid, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/areamail/delete.json';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  /** @type {!Object} */
  var formParams = {};

  // verify required parameter 'areamailid' is set
  if (!areamailid) {
    throw new Error('Missing required parameter areamailid when calling areamailDelete');
  }
  headerParams['Content-Type'] = 'application/x-www-form-urlencoded';

  formParams['areamailid'] = areamailid;

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: false,
        data: this.httpParamSerializer(formParams),
    params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * List AreaMails
 * Retrieve a list of AreaMail objects.
 * @param {!number=} opt_page The page count to retrieve from the total results in the collection. Page indexing starts at 1.
 * @param {!number=} opt_pagesize The count of objects to return per page.
 * @param {!string=} opt_areamailsid The unique identifier for an AreaMail object.
 * @param {!string=} opt_dateCreated The date the AreaMail was created.
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!string>}
 */
API.Client.AreaMailApi.prototype.areamailLists = function(opt_page, opt_pagesize, opt_areamailsid, opt_dateCreated, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/areamail/lists.json';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  /** @type {!Object} */
  var formParams = {};

  headerParams['Content-Type'] = 'application/x-www-form-urlencoded';

  formParams['page'] = opt_page;

  formParams['pagesize'] = opt_pagesize;

  formParams['areamailsid'] = opt_areamailsid;

  formParams['dateCreated'] = opt_dateCreated;

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: false,
        data: this.httpParamSerializer(formParams),
    params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}

/**
 * View AreaMail
 * Retrieve an AreaMail object by its AreaMailId.
 * @param {!string} areamailid The unique identifier for an AreaMail object.
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!string>}
 */
API.Client.AreaMailApi.prototype.areamailView = function(areamailid, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/areamail/view.json';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  /** @type {!Object} */
  var formParams = {};

  // verify required parameter 'areamailid' is set
  if (!areamailid) {
    throw new Error('Missing required parameter areamailid when calling areamailView');
  }
  headerParams['Content-Type'] = 'application/x-www-form-urlencoded';

  formParams['areamailid'] = areamailid;

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: false,
        data: this.httpParamSerializer(formParams),
    params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}
