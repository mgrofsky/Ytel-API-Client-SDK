/**
 * @fileoverview AUTOMATICALLY GENERATED service for API.Client.UsageApi.
 * Do not edit this file by hand or your changes will be lost next time it is
 * generated.
 *
 * Ytel API version 3
 * Version: 3.12
 * Generated by: io.swagger.codegen.languages.JavascriptClosureAngularClientCodegen
 */
goog.provide('API.Client.UsageApi');


/**
 * @constructor
 * @param {!angular.$http} $http
 * @param {!Object} $httpParamSerializer
 * @param {!angular.$injector} $injector
 * @struct
 */
API.Client.UsageApi = function($http, $httpParamSerializer, $injector) {
  /** @private {!string} */
  this.basePath_ = $injector.has('UsageApiBasePath') ?
                   /** @type {!string} */ ($injector.get('UsageApiBasePath')) :
                   'https://api.ytel.com/api/v3';

  /** @private {!Object<string, string>} */
  this.defaultHeaders_ = $injector.has('UsageApiDefaultHeaders') ?
                   /** @type {!Object<string, string>} */ (
                       $injector.get('UsageApiDefaultHeaders')) :
                   {};

  /** @private {!angular.$http} */
  this.http_ = $http;

  /** @package {!Object} */
  this.httpParamSerializer = $injector.get('$httpParamSerializer');
}
API.Client.UsageApi.$inject = ['$http', '$httpParamSerializer', '$injector'];

/**
 * List Usage
 * Retrieve usage metrics regarding your Ytel account. The results includes inbound/outbound voice calls and inbound/outbound SMS messages as well as carrier lookup requests.
 * @param {!string=} opt_productCode Filter usage results by product type.
 * @param {!string=} opt_startDate Filter usage objects by start date.
 * @param {!string=} opt_endDate Filter usage objects by end date.
 * @param {!string=} opt_includeSubAccounts Will include all subaccount usage data
 * @param {!angular.$http.Config=} opt_extraHttpRequestParams Extra HTTP parameters to send.
 * @return {!angular.$q.Promise<!string>}
 */
API.Client.UsageApi.prototype.usageListusage = function(opt_productCode, opt_startDate, opt_endDate, opt_includeSubAccounts, opt_extraHttpRequestParams) {
  /** @const {string} */
  var path = this.basePath_ + '/usage/listusage.json';

  /** @type {!Object} */
  var queryParameters = {};

  /** @type {!Object} */
  var headerParams = angular.extend({}, this.defaultHeaders_);
  /** @type {!Object} */
  var formParams = {};

  headerParams['Content-Type'] = 'application/x-www-form-urlencoded';

  formParams['ProductCode'] = opt_productCode;

  formParams['startDate'] = opt_startDate;

  formParams['endDate'] = opt_endDate;

  formParams['IncludeSubAccounts'] = opt_includeSubAccounts;

  /** @type {!Object} */
  var httpRequestParams = {
    method: 'POST',
    url: path,
    json: false,
        data: this.httpParamSerializer(formParams),
    params: queryParameters,
    headers: headerParams
  };

  if (opt_extraHttpRequestParams) {
    httpRequestParams = angular.extend(httpRequestParams, opt_extraHttpRequestParams);
  }

  return (/** @type {?} */ (this.http_))(httpRequestParams);
}
