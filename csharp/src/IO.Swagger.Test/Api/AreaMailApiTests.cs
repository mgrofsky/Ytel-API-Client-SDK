/* 
 * Ytel API V3
 *
 * Ytel API version 3
 *
 * OpenAPI spec version: 3.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing AreaMailApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class AreaMailApiTests
    {
        private AreaMailApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new AreaMailApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AreaMailApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AreaMailApi
            //Assert.IsInstanceOfType(typeof(AreaMailApi), instance, "instance is a AreaMailApi");
        }

        
        /// <summary>
        /// Test AreamailCreate
        /// </summary>
        [Test]
        public void AreamailCreateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string routes = null;
            //string attachbyid = null;
            //string front = null;
            //string back = null;
            //string description = null;
            //string targettype = null;
            //string htmldata = null;
            //var response = instance.AreamailCreate(routes, attachbyid, front, back, description, targettype, htmldata);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test AreamailDelete
        /// </summary>
        [Test]
        public void AreamailDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string areamailid = null;
            //var response = instance.AreamailDelete(areamailid);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test AreamailLists
        /// </summary>
        [Test]
        public void AreamailListsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? pagesize = null;
            //string areamailsid = null;
            //string dateCreated = null;
            //var response = instance.AreamailLists(page, pagesize, areamailsid, dateCreated);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test AreamailView
        /// </summary>
        [Test]
        public void AreamailViewTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string areamailid = null;
            //var response = instance.AreamailView(areamailid);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
    }

}
