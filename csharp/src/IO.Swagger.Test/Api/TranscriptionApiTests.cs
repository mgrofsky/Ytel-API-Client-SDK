/* 
 * Ytel API V3
 *
 * Ytel API version 3
 *
 * OpenAPI spec version: 3.11
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing TranscriptionApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class TranscriptionApiTests
    {
        private TranscriptionApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new TranscriptionApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of TranscriptionApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' TranscriptionApi
            //Assert.IsInstanceOfType(typeof(TranscriptionApi), instance, "instance is a TranscriptionApi");
        }

        
        /// <summary>
        /// Test TranscriptionsAudiourltranscription
        /// </summary>
        [Test]
        public void TranscriptionsAudiourltranscriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string audiourl = null;
            //var response = instance.TranscriptionsAudiourltranscription(audiourl);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test TranscriptionsListtranscription
        /// </summary>
        [Test]
        public void TranscriptionsListtranscriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? page = null;
            //int? pagesize = null;
            //string status = null;
            //string dateTranscribed = null;
            //var response = instance.TranscriptionsListtranscription(page, pagesize, status, dateTranscribed);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test TranscriptionsRecordingtranscription
        /// </summary>
        [Test]
        public void TranscriptionsRecordingtranscriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string recordingSid = null;
            //var response = instance.TranscriptionsRecordingtranscription(recordingSid);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test TranscriptionsViewtranscription
        /// </summary>
        [Test]
        public void TranscriptionsViewtranscriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string transcriptionsid = null;
            //var response = instance.TranscriptionsViewtranscription(transcriptionsid);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
    }

}
