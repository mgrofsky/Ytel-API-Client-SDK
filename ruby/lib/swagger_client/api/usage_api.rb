=begin
#Ytel API V3

#Ytel API version 3

OpenAPI spec version: 3.11

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 1.0.12-1

=end

require "uri"

module SwaggerClient
  class UsageApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # List Usage
    # Retrieve usage metrics regarding your Ytel account. The results includes inbound/outbound voice calls and inbound/outbound SMS messages as well as carrier lookup requests.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :product_code Filter usage results by product type. (default to 0)
    # @option opts [String] :start_date Filter usage objects by start date. (default to 2016-09-06)
    # @option opts [String] :end_date Filter usage objects by end date. (default to 2016-09-06)
    # @option opts [String] :include_sub_accounts Will include all subaccount usage data
    # @return [String]
    def usage_listusage(opts = {})
      data, _status_code, _headers = usage_listusage_with_http_info(opts)
      return data
    end

    # List Usage
    # Retrieve usage metrics regarding your Ytel account. The results includes inbound/outbound voice calls and inbound/outbound SMS messages as well as carrier lookup requests.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :product_code Filter usage results by product type.
    # @option opts [String] :start_date Filter usage objects by start date.
    # @option opts [String] :end_date Filter usage objects by end date.
    # @option opts [String] :include_sub_accounts Will include all subaccount usage data
    # @return [Array<(String, Fixnum, Hash)>] String data, response status code and response headers
    def usage_listusage_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: UsageApi.usage_listusage ..."
      end
      if @api_client.config.client_side_validation && opts[:'product_code'] && !['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13'].include?(opts[:'product_code'])
        fail ArgumentError, 'invalid value for "product_code", must be one of 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13'
      end
      # resource path
      local_var_path = "/usage/listusage.json"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/x-www-form-urlencoded'])

      # form parameters
      form_params = {}
      form_params["ProductCode"] = opts[:'product_code'] if !opts[:'product_code'].nil?
      form_params["startDate"] = opts[:'start_date'] if !opts[:'start_date'].nil?
      form_params["endDate"] = opts[:'end_date'] if !opts[:'end_date'].nil?
      form_params["IncludeSubAccounts"] = opts[:'include_sub_accounts'] if !opts[:'include_sub_accounts'].nil?

      # http body (model)
      post_body = nil
      auth_names = ['auth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'String')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: UsageApi#usage_listusage\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
