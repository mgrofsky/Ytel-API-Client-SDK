=begin
#Ytel API V3

#Ytel API version 3

OpenAPI spec version: 3.12

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require "uri"

module SwaggerClient
  class PhoneNumberApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Available Numbers
    # Retrieve a list of available phone numbers that can be purchased and used for your Ytel account.
    # @param numbertype Number type either SMS,Voice or all
    # @param areacode Specifies the area code for the returned list of available numbers. Only available for North American numbers.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :pagesize The count of objects to return. (default to 10)
    # @return [String]
    def incomingphone_availablenumber(numbertype, areacode, opts = {})
      data, _status_code, _headers = incomingphone_availablenumber_with_http_info(numbertype, areacode, opts)
      return data
    end

    # Available Numbers
    # Retrieve a list of available phone numbers that can be purchased and used for your Ytel account.
    # @param numbertype Number type either SMS,Voice or all
    # @param areacode Specifies the area code for the returned list of available numbers. Only available for North American numbers.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :pagesize The count of objects to return.
    # @return [Array<(String, Fixnum, Hash)>] String data, response status code and response headers
    def incomingphone_availablenumber_with_http_info(numbertype, areacode, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: PhoneNumberApi.incomingphone_availablenumber ..."
      end
      # verify the required parameter 'numbertype' is set
      if @api_client.config.client_side_validation && numbertype.nil?
        fail ArgumentError, "Missing the required parameter 'numbertype' when calling PhoneNumberApi.incomingphone_availablenumber"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['all', 'voice', 'sms'].include?(numbertype)
        fail ArgumentError, "invalid value for 'numbertype', must be one of all, voice, sms"
      end
      # verify the required parameter 'areacode' is set
      if @api_client.config.client_side_validation && areacode.nil?
        fail ArgumentError, "Missing the required parameter 'areacode' when calling PhoneNumberApi.incomingphone_availablenumber"
      end
      # resource path
      local_var_path = "/incomingphone/availablenumber.json"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/x-www-form-urlencoded'])

      # form parameters
      form_params = {}
      form_params["numbertype"] = numbertype
      form_params["areacode"] = areacode
      form_params["pagesize"] = opts[:'pagesize'] if !opts[:'pagesize'].nil?

      # http body (model)
      post_body = nil
      auth_names = ['auth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'String')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneNumberApi#incomingphone_availablenumber\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Bulk Buy Numbers
    # Purchase a selected number of DID's from specific area codes to be used with your Ytel account.
    # @param number_type The capability the number supports.
    # @param area_code Specifies the area code for the returned list of available numbers. Only available for North American numbers.
    # @param quantity A positive integer that tells how many number you want to buy at a time.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :leftover If desired quantity is unavailable purchase what is available .
    # @return [String]
    def incomingphone_bulkbuy(number_type, area_code, quantity, opts = {})
      data, _status_code, _headers = incomingphone_bulkbuy_with_http_info(number_type, area_code, quantity, opts)
      return data
    end

    # Bulk Buy Numbers
    # Purchase a selected number of DID&#39;s from specific area codes to be used with your Ytel account.
    # @param number_type The capability the number supports.
    # @param area_code Specifies the area code for the returned list of available numbers. Only available for North American numbers.
    # @param quantity A positive integer that tells how many number you want to buy at a time.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :leftover If desired quantity is unavailable purchase what is available .
    # @return [Array<(String, Fixnum, Hash)>] String data, response status code and response headers
    def incomingphone_bulkbuy_with_http_info(number_type, area_code, quantity, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: PhoneNumberApi.incomingphone_bulkbuy ..."
      end
      # verify the required parameter 'number_type' is set
      if @api_client.config.client_side_validation && number_type.nil?
        fail ArgumentError, "Missing the required parameter 'number_type' when calling PhoneNumberApi.incomingphone_bulkbuy"
      end
      # verify enum value
      if @api_client.config.client_side_validation && !['all', 'voice', 'sms'].include?(number_type)
        fail ArgumentError, "invalid value for 'number_type', must be one of all, voice, sms"
      end
      # verify the required parameter 'area_code' is set
      if @api_client.config.client_side_validation && area_code.nil?
        fail ArgumentError, "Missing the required parameter 'area_code' when calling PhoneNumberApi.incomingphone_bulkbuy"
      end
      # verify the required parameter 'quantity' is set
      if @api_client.config.client_side_validation && quantity.nil?
        fail ArgumentError, "Missing the required parameter 'quantity' when calling PhoneNumberApi.incomingphone_bulkbuy"
      end
      # resource path
      local_var_path = "/incomingphone/bulkbuy.json"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/x-www-form-urlencoded'])

      # form parameters
      form_params = {}
      form_params["NumberType"] = number_type
      form_params["AreaCode"] = area_code
      form_params["Quantity"] = quantity
      form_params["Leftover"] = opts[:'leftover'] if !opts[:'leftover'].nil?

      # http body (model)
      post_body = nil
      auth_names = ['auth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'String')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneNumberApi#incomingphone_bulkbuy\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Purchase Number
    # Purchase a phone number to be used with your Ytel account
    # @param phone_number A valid 10-digit Ytel number (E.164 format).
    # @param [Hash] opts the optional parameters
    # @return [String]
    def incomingphone_buynumber(phone_number, opts = {})
      data, _status_code, _headers = incomingphone_buynumber_with_http_info(phone_number, opts)
      return data
    end

    # Purchase Number
    # Purchase a phone number to be used with your Ytel account
    # @param phone_number A valid 10-digit Ytel number (E.164 format).
    # @param [Hash] opts the optional parameters
    # @return [Array<(String, Fixnum, Hash)>] String data, response status code and response headers
    def incomingphone_buynumber_with_http_info(phone_number, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: PhoneNumberApi.incomingphone_buynumber ..."
      end
      # verify the required parameter 'phone_number' is set
      if @api_client.config.client_side_validation && phone_number.nil?
        fail ArgumentError, "Missing the required parameter 'phone_number' when calling PhoneNumberApi.incomingphone_buynumber"
      end
      # resource path
      local_var_path = "/incomingphone/buynumber.json"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/x-www-form-urlencoded'])

      # form parameters
      form_params = {}
      form_params["PhoneNumber"] = phone_number

      # http body (model)
      post_body = nil
      auth_names = ['auth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'String')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneNumberApi#incomingphone_buynumber\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get DID Score
    # Get DID Score Number
    # @param phonenumber Specifies the multiple phone numbers for check updated spamscore .
    # @param [Hash] opts the optional parameters
    # @return [String]
    def incomingphone_getdidscore(phonenumber, opts = {})
      data, _status_code, _headers = incomingphone_getdidscore_with_http_info(phonenumber, opts)
      return data
    end

    # Get DID Score
    # Get DID Score Number
    # @param phonenumber Specifies the multiple phone numbers for check updated spamscore .
    # @param [Hash] opts the optional parameters
    # @return [Array<(String, Fixnum, Hash)>] String data, response status code and response headers
    def incomingphone_getdidscore_with_http_info(phonenumber, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: PhoneNumberApi.incomingphone_getdidscore ..."
      end
      # verify the required parameter 'phonenumber' is set
      if @api_client.config.client_side_validation && phonenumber.nil?
        fail ArgumentError, "Missing the required parameter 'phonenumber' when calling PhoneNumberApi.incomingphone_getdidscore"
      end
      # resource path
      local_var_path = "/incomingphone/getdidscore.json"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/x-www-form-urlencoded'])

      # form parameters
      form_params = {}
      form_params["Phonenumber"] = phonenumber

      # http body (model)
      post_body = nil
      auth_names = ['auth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'String')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneNumberApi#incomingphone_getdidscore\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List Numbers
    # Retrieve a list of purchased phones numbers associated with your Ytel account.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page Which page of the overall response will be returned. Page indexing starts at 1. (default to 1)
    # @option opts [Integer] :page_size The page count to retrieve from the total results in the collection. Page indexing starts at 1. (default to 10)
    # @option opts [String] :number_type The capability supported by the number.Number type either SMS,Voice or all
    # @option opts [String] :friendly_name A human-readable label added to the number object.
    # @return [String]
    def incomingphone_listnumber(opts = {})
      data, _status_code, _headers = incomingphone_listnumber_with_http_info(opts)
      return data
    end

    # List Numbers
    # Retrieve a list of purchased phones numbers associated with your Ytel account.
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page Which page of the overall response will be returned. Page indexing starts at 1.
    # @option opts [Integer] :page_size The page count to retrieve from the total results in the collection. Page indexing starts at 1.
    # @option opts [String] :number_type The capability supported by the number.Number type either SMS,Voice or all
    # @option opts [String] :friendly_name A human-readable label added to the number object.
    # @return [Array<(String, Fixnum, Hash)>] String data, response status code and response headers
    def incomingphone_listnumber_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: PhoneNumberApi.incomingphone_listnumber ..."
      end
      if @api_client.config.client_side_validation && opts[:'number_type'] && !['all', 'voice', 'sms'].include?(opts[:'number_type'])
        fail ArgumentError, 'invalid value for "number_type", must be one of all, voice, sms'
      end
      # resource path
      local_var_path = "/incomingphone/listnumber.json"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/x-www-form-urlencoded'])

      # form parameters
      form_params = {}
      form_params["Page"] = opts[:'page'] if !opts[:'page'].nil?
      form_params["PageSize"] = opts[:'page_size'] if !opts[:'page_size'].nil?
      form_params["NumberType"] = opts[:'number_type'] if !opts[:'number_type'].nil?
      form_params["FriendlyName"] = opts[:'friendly_name'] if !opts[:'friendly_name'].nil?

      # http body (model)
      post_body = nil
      auth_names = ['auth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'String')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneNumberApi#incomingphone_listnumber\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Bulk Release
    # Remove a purchased Ytel number from your account.
    # @param phone_number A valid Ytel comma separated numbers (E.164 format).
    # @param [Hash] opts the optional parameters
    # @return [String]
    def incomingphone_massreleasenumber(phone_number, opts = {})
      data, _status_code, _headers = incomingphone_massreleasenumber_with_http_info(phone_number, opts)
      return data
    end

    # Bulk Release
    # Remove a purchased Ytel number from your account.
    # @param phone_number A valid Ytel comma separated numbers (E.164 format).
    # @param [Hash] opts the optional parameters
    # @return [Array<(String, Fixnum, Hash)>] String data, response status code and response headers
    def incomingphone_massreleasenumber_with_http_info(phone_number, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: PhoneNumberApi.incomingphone_massreleasenumber ..."
      end
      # verify the required parameter 'phone_number' is set
      if @api_client.config.client_side_validation && phone_number.nil?
        fail ArgumentError, "Missing the required parameter 'phone_number' when calling PhoneNumberApi.incomingphone_massreleasenumber"
      end
      # resource path
      local_var_path = "/incomingphone/massreleasenumber.json"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/x-www-form-urlencoded'])

      # form parameters
      form_params = {}
      form_params["PhoneNumber"] = phone_number

      # http body (model)
      post_body = nil
      auth_names = ['auth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'String')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneNumberApi#incomingphone_massreleasenumber\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Bulk Update Numbers
    # Update properties for a Ytel numbers that has been purchased for your account. Refer to the parameters list for the list of properties that can be updated.
    # @param phone_number A valid comma(,) separated Ytel numbers. (E.164 format).
    # @param voice_url The URL returning InboundXML incoming calls should execute when connected.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :friendly_name A human-readable value for labeling the number.
    # @option opts [String] :voice_method Specifies the HTTP method used to request the VoiceUrl once incoming call connects.
    # @option opts [String] :voice_fallback_url URL used if any errors occur during execution of InboundXML on a call or at initial request of the voice url
    # @option opts [String] :voice_fallback_method Specifies the HTTP method used to request the VoiceFallbackUrl once incoming call connects.
    # @option opts [String] :hangup_callback URL that can be requested to receive notification when and how incoming call has ended.
    # @option opts [String] :hangup_callback_method The HTTP method Ytel will use when requesting the HangupCallback URL.
    # @option opts [String] :heartbeat_url URL that can be used to monitor the phone number.
    # @option opts [String] :heartbeat_method The HTTP method Ytel will use when requesting the HeartbeatUrl.
    # @option opts [String] :sms_url URL requested when an SMS is received.
    # @option opts [String] :sms_method The HTTP method Ytel will use when requesting the SmsUrl.
    # @option opts [String] :sms_fallback_url URL used if any errors occur during execution of InboundXML from an SMS or at initial request of the SmsUrl.
    # @option opts [String] :sms_fallback_method The HTTP method Ytel will use when URL requested if the SmsUrl is not available.
    # @return [String]
    def incomingphone_massupdatenumber(phone_number, voice_url, opts = {})
      data, _status_code, _headers = incomingphone_massupdatenumber_with_http_info(phone_number, voice_url, opts)
      return data
    end

    # Bulk Update Numbers
    # Update properties for a Ytel numbers that has been purchased for your account. Refer to the parameters list for the list of properties that can be updated.
    # @param phone_number A valid comma(,) separated Ytel numbers. (E.164 format).
    # @param voice_url The URL returning InboundXML incoming calls should execute when connected.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :friendly_name A human-readable value for labeling the number.
    # @option opts [String] :voice_method Specifies the HTTP method used to request the VoiceUrl once incoming call connects.
    # @option opts [String] :voice_fallback_url URL used if any errors occur during execution of InboundXML on a call or at initial request of the voice url
    # @option opts [String] :voice_fallback_method Specifies the HTTP method used to request the VoiceFallbackUrl once incoming call connects.
    # @option opts [String] :hangup_callback URL that can be requested to receive notification when and how incoming call has ended.
    # @option opts [String] :hangup_callback_method The HTTP method Ytel will use when requesting the HangupCallback URL.
    # @option opts [String] :heartbeat_url URL that can be used to monitor the phone number.
    # @option opts [String] :heartbeat_method The HTTP method Ytel will use when requesting the HeartbeatUrl.
    # @option opts [String] :sms_url URL requested when an SMS is received.
    # @option opts [String] :sms_method The HTTP method Ytel will use when requesting the SmsUrl.
    # @option opts [String] :sms_fallback_url URL used if any errors occur during execution of InboundXML from an SMS or at initial request of the SmsUrl.
    # @option opts [String] :sms_fallback_method The HTTP method Ytel will use when URL requested if the SmsUrl is not available.
    # @return [Array<(String, Fixnum, Hash)>] String data, response status code and response headers
    def incomingphone_massupdatenumber_with_http_info(phone_number, voice_url, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: PhoneNumberApi.incomingphone_massupdatenumber ..."
      end
      # verify the required parameter 'phone_number' is set
      if @api_client.config.client_side_validation && phone_number.nil?
        fail ArgumentError, "Missing the required parameter 'phone_number' when calling PhoneNumberApi.incomingphone_massupdatenumber"
      end
      # verify the required parameter 'voice_url' is set
      if @api_client.config.client_side_validation && voice_url.nil?
        fail ArgumentError, "Missing the required parameter 'voice_url' when calling PhoneNumberApi.incomingphone_massupdatenumber"
      end
      # resource path
      local_var_path = "/incomingphone/massupdatenumber.json"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/x-www-form-urlencoded'])

      # form parameters
      form_params = {}
      form_params["PhoneNumber"] = phone_number
      form_params["VoiceUrl"] = voice_url
      form_params["FriendlyName"] = opts[:'friendly_name'] if !opts[:'friendly_name'].nil?
      form_params["VoiceMethod"] = opts[:'voice_method'] if !opts[:'voice_method'].nil?
      form_params["VoiceFallbackUrl"] = opts[:'voice_fallback_url'] if !opts[:'voice_fallback_url'].nil?
      form_params["VoiceFallbackMethod"] = opts[:'voice_fallback_method'] if !opts[:'voice_fallback_method'].nil?
      form_params["HangupCallback"] = opts[:'hangup_callback'] if !opts[:'hangup_callback'].nil?
      form_params["HangupCallbackMethod"] = opts[:'hangup_callback_method'] if !opts[:'hangup_callback_method'].nil?
      form_params["HeartbeatUrl"] = opts[:'heartbeat_url'] if !opts[:'heartbeat_url'].nil?
      form_params["HeartbeatMethod"] = opts[:'heartbeat_method'] if !opts[:'heartbeat_method'].nil?
      form_params["SmsUrl"] = opts[:'sms_url'] if !opts[:'sms_url'].nil?
      form_params["SmsMethod"] = opts[:'sms_method'] if !opts[:'sms_method'].nil?
      form_params["SmsFallbackUrl"] = opts[:'sms_fallback_url'] if !opts[:'sms_fallback_url'].nil?
      form_params["SmsFallbackMethod"] = opts[:'sms_fallback_method'] if !opts[:'sms_fallback_method'].nil?

      # http body (model)
      post_body = nil
      auth_names = ['auth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'String')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneNumberApi#incomingphone_massupdatenumber\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Release Number
    # Remove a purchased Ytel number from your account.
    # @param phone_number A valid 10-digit Ytel number (E.164 format).
    # @param response_type Response type format xml or json
    # @param [Hash] opts the optional parameters
    # @return [String]
    def incomingphone_releasenumber_by_response_type_post(phone_number, response_type, opts = {})
      data, _status_code, _headers = incomingphone_releasenumber_by_response_type_post_with_http_info(phone_number, response_type, opts)
      return data
    end

    # Release Number
    # Remove a purchased Ytel number from your account.
    # @param phone_number A valid 10-digit Ytel number (E.164 format).
    # @param response_type Response type format xml or json
    # @param [Hash] opts the optional parameters
    # @return [Array<(String, Fixnum, Hash)>] String data, response status code and response headers
    def incomingphone_releasenumber_by_response_type_post_with_http_info(phone_number, response_type, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: PhoneNumberApi.incomingphone_releasenumber_by_response_type_post ..."
      end
      # verify the required parameter 'phone_number' is set
      if @api_client.config.client_side_validation && phone_number.nil?
        fail ArgumentError, "Missing the required parameter 'phone_number' when calling PhoneNumberApi.incomingphone_releasenumber_by_response_type_post"
      end
      # verify the required parameter 'response_type' is set
      if @api_client.config.client_side_validation && response_type.nil?
        fail ArgumentError, "Missing the required parameter 'response_type' when calling PhoneNumberApi.incomingphone_releasenumber_by_response_type_post"
      end
      # resource path
      local_var_path = "/incomingphone/releasenumber.{ResponseType}".sub('{' + 'ResponseType' + '}', response_type.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/x-www-form-urlencoded'])

      # form parameters
      form_params = {}
      form_params["PhoneNumber"] = phone_number

      # http body (model)
      post_body = nil
      auth_names = ['auth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'String')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneNumberApi#incomingphone_releasenumber_by_response_type_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Move Number
    # Transfer phone number that has been purchased for from one account to another account.
    # @param phonenumber A valid 10-digit Ytel number (E.164 format).
    # @param fromaccountsid A specific Accountsid from where Number is getting transfer.
    # @param toaccountsid A specific Accountsid to which Number is getting transfer.
    # @param [Hash] opts the optional parameters
    # @return [String]
    def incomingphone_transferphonenumbers(phonenumber, fromaccountsid, toaccountsid, opts = {})
      data, _status_code, _headers = incomingphone_transferphonenumbers_with_http_info(phonenumber, fromaccountsid, toaccountsid, opts)
      return data
    end

    # Move Number
    # Transfer phone number that has been purchased for from one account to another account.
    # @param phonenumber A valid 10-digit Ytel number (E.164 format).
    # @param fromaccountsid A specific Accountsid from where Number is getting transfer.
    # @param toaccountsid A specific Accountsid to which Number is getting transfer.
    # @param [Hash] opts the optional parameters
    # @return [Array<(String, Fixnum, Hash)>] String data, response status code and response headers
    def incomingphone_transferphonenumbers_with_http_info(phonenumber, fromaccountsid, toaccountsid, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: PhoneNumberApi.incomingphone_transferphonenumbers ..."
      end
      # verify the required parameter 'phonenumber' is set
      if @api_client.config.client_side_validation && phonenumber.nil?
        fail ArgumentError, "Missing the required parameter 'phonenumber' when calling PhoneNumberApi.incomingphone_transferphonenumbers"
      end
      # verify the required parameter 'fromaccountsid' is set
      if @api_client.config.client_side_validation && fromaccountsid.nil?
        fail ArgumentError, "Missing the required parameter 'fromaccountsid' when calling PhoneNumberApi.incomingphone_transferphonenumbers"
      end
      # verify the required parameter 'toaccountsid' is set
      if @api_client.config.client_side_validation && toaccountsid.nil?
        fail ArgumentError, "Missing the required parameter 'toaccountsid' when calling PhoneNumberApi.incomingphone_transferphonenumbers"
      end
      # resource path
      local_var_path = "/incomingphone/transferphonenumbers.json"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/x-www-form-urlencoded'])

      # form parameters
      form_params = {}
      form_params["phonenumber"] = phonenumber
      form_params["fromaccountsid"] = fromaccountsid
      form_params["toaccountsid"] = toaccountsid

      # http body (model)
      post_body = nil
      auth_names = ['auth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'String')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneNumberApi#incomingphone_transferphonenumbers\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update Number
    # Update properties for a Ytel number that has been purchased for your account. Refer to the parameters list for the list of properties that can be updated.
    # @param phone_number A valid Ytel number (E.164 format).
    # @param voice_url URL requested once the call connects
    # @param [Hash] opts the optional parameters
    # @option opts [String] :friendly_name Phone number friendly name description
    # @option opts [String] :voice_method Post or Get
    # @option opts [String] :voice_fallback_url URL requested if the voice URL is not available
    # @option opts [String] :voice_fallback_method Post or Get
    # @option opts [String] :hangup_callback callback url after a hangup occurs
    # @option opts [String] :hangup_callback_method Post or Get
    # @option opts [String] :heartbeat_url URL requested once the call connects
    # @option opts [String] :heartbeat_method URL that can be requested every 60 seconds during the call to notify of elapsed time
    # @option opts [String] :sms_url URL requested when an SMS is received
    # @option opts [String] :sms_method Post or Get
    # @option opts [String] :sms_fallback_url URL used if any errors occur during execution of InboundXML from an SMS or at initial request of the SmsUrl.
    # @option opts [String] :sms_fallback_method The HTTP method Ytel will use when URL requested if the SmsUrl is not available.
    # @return [String]
    def incomingphone_updatenumber(phone_number, voice_url, opts = {})
      data, _status_code, _headers = incomingphone_updatenumber_with_http_info(phone_number, voice_url, opts)
      return data
    end

    # Update Number
    # Update properties for a Ytel number that has been purchased for your account. Refer to the parameters list for the list of properties that can be updated.
    # @param phone_number A valid Ytel number (E.164 format).
    # @param voice_url URL requested once the call connects
    # @param [Hash] opts the optional parameters
    # @option opts [String] :friendly_name Phone number friendly name description
    # @option opts [String] :voice_method Post or Get
    # @option opts [String] :voice_fallback_url URL requested if the voice URL is not available
    # @option opts [String] :voice_fallback_method Post or Get
    # @option opts [String] :hangup_callback callback url after a hangup occurs
    # @option opts [String] :hangup_callback_method Post or Get
    # @option opts [String] :heartbeat_url URL requested once the call connects
    # @option opts [String] :heartbeat_method URL that can be requested every 60 seconds during the call to notify of elapsed time
    # @option opts [String] :sms_url URL requested when an SMS is received
    # @option opts [String] :sms_method Post or Get
    # @option opts [String] :sms_fallback_url URL used if any errors occur during execution of InboundXML from an SMS or at initial request of the SmsUrl.
    # @option opts [String] :sms_fallback_method The HTTP method Ytel will use when URL requested if the SmsUrl is not available.
    # @return [Array<(String, Fixnum, Hash)>] String data, response status code and response headers
    def incomingphone_updatenumber_with_http_info(phone_number, voice_url, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: PhoneNumberApi.incomingphone_updatenumber ..."
      end
      # verify the required parameter 'phone_number' is set
      if @api_client.config.client_side_validation && phone_number.nil?
        fail ArgumentError, "Missing the required parameter 'phone_number' when calling PhoneNumberApi.incomingphone_updatenumber"
      end
      # verify the required parameter 'voice_url' is set
      if @api_client.config.client_side_validation && voice_url.nil?
        fail ArgumentError, "Missing the required parameter 'voice_url' when calling PhoneNumberApi.incomingphone_updatenumber"
      end
      # resource path
      local_var_path = "/incomingphone/updatenumber.json"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/x-www-form-urlencoded'])

      # form parameters
      form_params = {}
      form_params["PhoneNumber"] = phone_number
      form_params["VoiceUrl"] = voice_url
      form_params["FriendlyName"] = opts[:'friendly_name'] if !opts[:'friendly_name'].nil?
      form_params["VoiceMethod"] = opts[:'voice_method'] if !opts[:'voice_method'].nil?
      form_params["VoiceFallbackUrl"] = opts[:'voice_fallback_url'] if !opts[:'voice_fallback_url'].nil?
      form_params["VoiceFallbackMethod"] = opts[:'voice_fallback_method'] if !opts[:'voice_fallback_method'].nil?
      form_params["HangupCallback"] = opts[:'hangup_callback'] if !opts[:'hangup_callback'].nil?
      form_params["HangupCallbackMethod"] = opts[:'hangup_callback_method'] if !opts[:'hangup_callback_method'].nil?
      form_params["HeartbeatUrl"] = opts[:'heartbeat_url'] if !opts[:'heartbeat_url'].nil?
      form_params["HeartbeatMethod"] = opts[:'heartbeat_method'] if !opts[:'heartbeat_method'].nil?
      form_params["SmsUrl"] = opts[:'sms_url'] if !opts[:'sms_url'].nil?
      form_params["SmsMethod"] = opts[:'sms_method'] if !opts[:'sms_method'].nil?
      form_params["SmsFallbackUrl"] = opts[:'sms_fallback_url'] if !opts[:'sms_fallback_url'].nil?
      form_params["SmsFallbackMethod"] = opts[:'sms_fallback_method'] if !opts[:'sms_fallback_method'].nil?

      # http body (model)
      post_body = nil
      auth_names = ['auth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'String')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneNumberApi#incomingphone_updatenumber\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # View Details
    # Retrieve the details for a phone number by its number.
    # @param phone_number A valid Ytel 10-digit phone number (E.164 format).
    # @param [Hash] opts the optional parameters
    # @return [String]
    def incomingphone_viewnumber(phone_number, opts = {})
      data, _status_code, _headers = incomingphone_viewnumber_with_http_info(phone_number, opts)
      return data
    end

    # View Details
    # Retrieve the details for a phone number by its number.
    # @param phone_number A valid Ytel 10-digit phone number (E.164 format).
    # @param [Hash] opts the optional parameters
    # @return [Array<(String, Fixnum, Hash)>] String data, response status code and response headers
    def incomingphone_viewnumber_with_http_info(phone_number, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: PhoneNumberApi.incomingphone_viewnumber ..."
      end
      # verify the required parameter 'phone_number' is set
      if @api_client.config.client_side_validation && phone_number.nil?
        fail ArgumentError, "Missing the required parameter 'phone_number' when calling PhoneNumberApi.incomingphone_viewnumber"
      end
      # resource path
      local_var_path = "/incomingphone/viewnumber.json"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/x-www-form-urlencoded'])

      # form parameters
      form_params = {}
      form_params["PhoneNumber"] = phone_number

      # http body (model)
      post_body = nil
      auth_names = ['auth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'String')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PhoneNumberApi#incomingphone_viewnumber\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
