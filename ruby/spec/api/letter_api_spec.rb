=begin
#Ytel API V3

#Ytel API version 3

OpenAPI spec version: 3.11

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 1.0.12-1

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::LetterApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'LetterApi' do
  before do
    # run before each test
    @instance = SwaggerClient::LetterApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of LetterApi' do
    it 'should create an instance of LetterApi' do
      expect(@instance).to be_instance_of(SwaggerClient::LetterApi)
    end
  end

  # unit tests for letter_create
  # Create Letter
  # Create, print, and mail a letter to an address. The letter file must be supplied as a PDF or an HTML string.
  # @param to The AddressId or an object structured when creating an address by addresses/Create.
  # @param from The AddressId or an object structured when creating an address by addresses/Create.
  # @param attachbyid Set an existing letter by attaching its LetterId.
  # @param file File can be a 8.5\&quot;x11\&quot; PDF uploaded file or URL that links to a file.
  # @param color Specify if letter should be printed in color.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :description A description for the letter.
  # @option opts [String] :extraservice Add an extra service to your letter. Options are \&quot;certified\&quot; or \&quot;registered\&quot;. Certified provides tracking and delivery confirmation for domestic destinations and is an additional $5.00. Registered provides tracking and confirmation for international addresses and is an additional $16.50.
  # @option opts [String] :doublesided Specify if letter should be printed on both sides.
  # @option opts [String] :template Boolean that defaults to true. When set to false, this specifies that your letter does not follow the m360 address template. In this case, a blank address page will be inserted at the beginning of your file and you will be charged for the extra page.
  # @option opts [String] :htmldata A string value that contains HTML markup.
  # @return [String]
  describe 'letter_create test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for letter_delete
  # Delete Letter
  # Remove a letter object by its LetterId.
  # @param lettersid The unique identifier for a letter object.
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'letter_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for letter_listsletter
  # List Letters
  # Retrieve a list of letter objects. The letter objects are sorted by creation date, with the most recently created letters appearing first.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page The page count to retrieve from the total results in the collection. Page indexing starts at 1.
  # @option opts [Integer] :pagesize The count of objects to return per page.
  # @option opts [String] :lettersid The unique identifier for a letter object.
  # @option opts [String] :date_created The date the letter was created.
  # @return [String]
  describe 'letter_listsletter test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for letter_viewletter
  # View Letter
  # Retrieve a letter object by its LetterSid.
  # @param lettersid The unique identifier for a letter object.
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'letter_viewletter test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
