=begin
#Ytel API V3

#Ytel API version 3

OpenAPI spec version: 3.12

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::ConferenceApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ConferenceApi' do
  before do
    # run before each test
    @instance = SwaggerClient::ConferenceApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ConferenceApi' do
    it 'should create an instance of ConferenceApi' do
      expect(@instance).to be_instance_of(SwaggerClient::ConferenceApi)
    end
  end

  # unit tests for conferences_add_participant
  # Add Participant
  # Add Participant in conference 
  # @param conference_sid The unique identifier for a conference object.
  # @param participant_number The phone number of the participant to be added.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :muted Specifies if participant should be muted.
  # @option opts [BOOLEAN] :deaf Specifies if the participant should hear audio in the conference.
  # @return [String]
  describe 'conferences_add_participant test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for conferences_create_conference
  # Create Conference
  # Here you can experiment with initiating a conference call through Ytel and view the request response generated when doing so.
  # @param from A valid 10-digit number (E.164 format) that will be initiating the conference call.
  # @param to A valid 10-digit number (E.164 format) that is to receive the conference call.
  # @param url URL requested once the conference connects
  # @param [Hash] opts the optional parameters
  # @option opts [String] :method Specifies the HTTP method used to request the required URL once call connects.
  # @option opts [String] :status_call_back_url URL that can be requested to receive notification when call has ended. A set of default parameters will be sent here once the conference is finished.
  # @option opts [String] :status_call_back_method Specifies the HTTP methodlinkclass used to request StatusCallbackUrl.
  # @option opts [String] :fallback_url URL requested if the initial Url parameter fails or encounters an error
  # @option opts [String] :fallback_method Specifies the HTTP method used to request the required FallbackUrl once call connects.
  # @option opts [BOOLEAN] :record Specifies if the conference should be recorded.
  # @option opts [String] :record_call_back_url Recording parameters will be sent here upon completion.
  # @option opts [String] :record_call_back_method Specifies the HTTP method used to request the required URL once conference connects.
  # @option opts [String] :schedule_time Schedule conference in future. Schedule time must be greater than current time
  # @option opts [Integer] :timeout The number of seconds the call stays on the line while waiting for an answer. The max time limit is 999 and the default limit is 60 seconds but lower times can be set.
  # @return [String]
  describe 'conferences_create_conference test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for conferences_deaf_mute_participant
  # Silence Participant
  # Deaf Mute Participant
  # @param conference_sid ID of the active conference
  # @param participant_sid ID of an active participant
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :muted Mute a participant
  # @option opts [BOOLEAN] :deaf Make it so a participant cant hear
  # @return [String]
  describe 'conferences_deaf_mute_participant test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for conferences_hangup_participant
  # Hangup Participant
  # Remove a participant from a conference.
  # @param conference_sid The unique identifier for a conference object.
  # @param participant_sid The unique identifier for a participant object.
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'conferences_hangup_participant test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for conferences_list_participant
  # List Participants
  # Retrieve a list of participants for an in-progress conference.
  # @param conference_sid The unique identifier for a conference.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page The page count to retrieve from the total results in the collection. Page indexing starts at 1.
  # @option opts [Integer] :pagesize The count of objects to return per page.
  # @option opts [BOOLEAN] :muted Specifies if participant should be muted.
  # @option opts [BOOLEAN] :deaf Specifies if the participant should hear audio in the conference.
  # @return [String]
  describe 'conferences_list_participant test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for conferences_listconference
  # List Conferences
  # Retrieve a list of conference objects.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page The page count to retrieve from the total results in the collection. Page indexing starts at 1.
  # @option opts [Integer] :pagesize Number of individual resources listed in the response per page
  # @option opts [String] :friendly_name Only return conferences with the specified FriendlyName
  # @option opts [String] :date_created Conference created date
  # @return [String]
  describe 'conferences_listconference test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for conferences_play_audio
  # Play Audio
  # Play an audio file during a conference.
  # @param conference_sid The unique identifier for a conference object.
  # @param participant_sid The unique identifier for a participant object.
  # @param audio_url The URL for the audio file that is to be played during the conference. Multiple audio files can be chained by using a semicolon.
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'conferences_play_audio test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for conferences_view_participant
  # View Participant
  # Retrieve information about a participant by its ParticipantSid.
  # @param conference_sid The unique identifier for a conference object.
  # @param participant_sid The unique identifier for a participant object.
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'conferences_view_participant test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for conferences_viewconference
  # View Conference
  # Retrieve information about a conference by its ConferenceSid.
  # @param conference_sid The unique identifier of each conference resource
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'conferences_viewconference test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
